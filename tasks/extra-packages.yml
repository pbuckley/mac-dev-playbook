---
- name: Install global Composer packages.
  composer:
    command: "{{ (item.state | default('present') == 'absent') | ternary('remove', 'require') }}"
    arguments: "{{ item.name | default(item) }} {{ item.version | default('@stable') }}"
    # Ansible 2.4 supports `global_command` making `working_dir` optional.
    working_dir: "{{ lookup('env', 'COMPOSER_HOME') | default('~/.composer', true) }}"
  loop: "{{ composer_packages }}"

- name: Install global NPM packages.
  npm:
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('present') }}"
    version: "{{ item.version | default(omit) }}"
    global: true
    executable: "{{ item.executable | default(omit) }}"
  loop: "{{ npm_packages }}"

- name: Install global easy_install packages.
  easy_install:
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('present') }}"
    version: "{{ item.version | default(omit) }}"
    executable: "{{ item.executable | default(omit) }}"
  with_items: "{{ easy_install_packages }}"
  become: yes

- name: Install global Pip packages.
  pip:
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('present') }}"
    version: "{{ item.version | default(omit) }}"
    executable: "{{ item.executable | default('pip3') }}"
  loop: "{{ pip_packages }}"
  become: yes

- name: Install global Ruby gems.
  gem:
    name: "{{ item.name | default(item) }}"
    state: "{{ item.state | default('present') }}"
    version: "{{ item.version | default(omit) }}"
    user_install: false
    executable: "{{ item.executable | default(omit) }}"
  loop: "{{ gem_packages }}"

- name: mkdir ~/.emacs-saved-desktops
  file:
    name: "{{ ansible_env.HOME }}/.emacs-saved-desktops"
    state: directory

- name: mkdir ~/.helm/plugins
  file:
    name: "{{ ansible_env.HOME }}/.helm/plugins"
    state: directory

# - name: Install helm plugins.
#   command: "helm plugin install {{ item }}"
#   args:
#     creates: "{{ ansible_env.HOME }}/.helm/plugins/{{ item | basename }}"
#   with_items: "{{ helm_packages }}"

# - name: First time init helm client-only.
#   command: "helm init --client-only"

- name: "Download jq from github release at {{ jq_url }}, put it in /usr/local/bin"
  get_url:
    url: "{{ jq_url }}"
    dest: /usr/local/bin/jq
    mode: '0755'
  become: yes
