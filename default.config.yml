---

# -bash: kubectl: command not found
# -bash: hub: command not found
# -bash: thefuck: command not found
# -bash: /usr/local/bin/git-merged-branches: Permission denied
# -bash: /usr/local/bin/git-unmerged-branches: Permission denied
# -bash: /usr/local/opt/nvm/nvm.sh: No such file or directory

# somehow I had to install homebrew from https://docs.brew.sh/Installation
# /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
#

downloads: ~/.ansible-downloads/

configure_android_studio: false # this is more of a one-time thing, don't update every time
configure_rvm: false # this doesn't work :(
configure_dotfiles: false
configure_terminal: true
configure_osx: true

# Set to 'true' to configure the Dock via dockutil.
configure_dock: false
dockitems_remove: []
# - Launchpad
# - TV
# - Podcasts
# - 'App Store'
dockitems_persist: []
# - name: "Sublime Text"
#   path: "/Applications/Sublime Text.app/"
#   pos: 5

configure_sudoers: true
sudoers_custom_config: |
  # Allow users in admin group to use sudo with no password.
  %admin ALL=(ALL) NOPASSWD: ALL
configure_homeshick: false

dotfiles_repo: https://github.com/geerlingguy/dotfiles.git
dotfiles_repo_accept_hostkey: true
dotfiles_repo_local_destination: ~/Development/GitHub/dotfiles
dotfiles_files:
  - .zshrc
  - .gitignore
  - .inputrc
  - .osx
  - .vimrc

usr_local_path: /usr/local
easy_install_installed_binary: /usr/bin/easy_install
pip_installed_binary: "{{ usr_local_path }}/bin/pip"

# how about jq? just dl it, chmod +x it, pop it in the executable path, voila?
# https://github.com/stedolan/jq/releases/download/jq-1.6/jq-osx-amd64
jq_version: 1.6
jq_os: osx
jq_arch: amd64

jq_url: https://github.com/jqlang/jq/releases/download/jq-{{ jq_version }}/jq-{{ jq_os }}-{{ jq_arch }}

homebrew_installed_packages:
  # - ansible # Installed via Pip.
  - ag
  - ant
  - autoconf
  - awscli
  - aws-iam-authenticator
  - aztfexport
  - bash
  - bash-completion
  - composer
  - coreutils
  - doxygen
  - fzf
  - gettext
  - gh
  - gifsicle
  - git
  - github/gh/gh
  - gnu-sed
  - go
  - gpg
  - helm
  - helmfile
  - hub
  - httpie
  - inetutils
  - iperf
  - kind
  - kubernetes-cli
  - kubernetes-helm
  - libevent
  - sqlite
  - markdown
  - maven
  - mcrypt
  - minikube
  - mysql
  - nmap
  - node
  - nvm
#  - php@7.4
  - ssh-copy-id
  - cowsay
  - readline
  - openssl
  - pinentry-mac
  - pv
  # - telnet # inetutils already installs it, so conflict?
  - thefuck
  - tree
  - watchman # a utility react native uses to watch for file changes and rebuild
  - weaveworks/tap/eksctl
  - wget
#  - wrk # no bottle available!
  - yarn
  - zsh-history-substring-search

# this is prolly not worth it - it is a pip package I could just
# instead of this crazy contraption of a complete package brew does
#  - ykman # yubikey manager CLI to use TOTP yubikey with AWS cli

homebrew_taps:
  - homebrew/core
  - homebrew/cask
  - AdoptOpenJDK/openjdk
  - weaveworks/tap

# the commented out apps were already installed before setup using this playbook
homebrew_cask_appdir: /Applications
homebrew_cask_apps:
#  - adoptopenjdk8 # requires Rosetta 2, skipped for now :(
  - alfred
  - android-sdk
  - android-ndk
  - basecamp
  - betterdiscord-installer
  - chromedriver
  - docker
  - dropbox
  - emacs
  - firefox
  - gpg-suite
  - google-cloud-sdk
  - google-chrome
  - handbrake
  - iterm2
  - licecap
  - macvim
#  - minikube # no cask with this name exists?
  - react-native-debugger
  - sequel-ace
  - sequel-pro
  - skitch
  - slack
  - sublime-text
  - transmit
  - vagrant
  # - virtualbox - requires intel :(

# See `geerlingguy.mas` role documentation for usage instructions.
mas_installed_apps: []
mas_email: ""
mas_password: ""

osx_script: "~/.osx --no-restart"

# Install packages from other package managers.
# Note: You are responsible for making sure the required package managers are
# installed, eg. through homebrew.
composer_packages: []
# - name: drush
#   state: present # present/absent, default: present
#   version: "^8.1" # default: N/A
gem_packages: []
# - name: bundler
#   state: present # present/absent/latest, default: present
#   version: "~> 1.15.1" # default: N/A
npm_packages: []
# - name: webpack
#   state: present # present/absent/latest, default: present
#   version: "^2.6" # default: N/A

# Set to 'true' to configure Sublime Text.
configure_sublime: false
sublime_base_path: '~/Library/Application Support/Sublime Text'
sublime_config_path: "Packages/User"
sublime_package_control:
  - "DocBlockr"
  - "Dockerfile Syntax Highlighting"
  - "FileDiffs"
  - "GitHub Flavored Markdown Preview"
  - "Jinja2"
  - "Package Control"
  - "PHP-Twig"
  - "Pretty JSON"
  - "SublimeLinter"
  - "SublimeLinter-contrib-yamllint"
  - "TrailingSpaces"
  - "WordCount"

easy_install_packages:
  - name: pip
    state: present # present/absent/latest, default: present
    executable: "{{ easy_install_installed_binary }}"
pip_packages:
  - name: virtualenv
    state: latest # present/absent/latest, default: present
    executable: "{{ pip_installed_binary }}"
  - name: pylint
    state: latest # present/absent/latest, default: present
    executable: "{{ pip_installed_binary }}"

helm_packages: ["https://github.com/databus23/helm-diff"]
# No prebuild binary for macos-arm64 on helm_packages :(

# Glob pattern to ansible task files to run after all other tasks are finished.
post_provision_tasks: []
